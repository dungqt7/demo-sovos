{"ast":null,"code":"var _jsxFileName = \"F:\\\\demo-sovos\\\\src\\\\tax-calculator\\\\components\\\\CalculationSetup\\\\dynamic-components\\\\AdditionalFields.js\";\nimport * as FIELDSNAMES from '../calculationSetupConstants';\nimport PropTypes from 'prop-types';\nimport SovosSimpleDynamicTextField from '../../../../util/SovosSimpleDynamicTextField';\nimport React from 'react';\nimport Discounts from './Discounts';\nimport SovosButtonShowMenus from '../../../../util/SovosButtonShowMenus';\nimport { withStyles } from '@material-ui/core';\nimport classNames from 'classnames';\nimport Divider from '@material-ui/core/Divider';\nimport { connect } from 'react-redux';\n\nvar styles = function styles() {\n  return {\n    mt20: {\n      marginTop: 20\n    },\n    dividernoPadding: {\n      marginLeft: '-20px',\n      marginRight: '-20px'\n    }\n  };\n};\n\nvar AdditionalFields = function AdditionalFields(_ref) {\n  var defaultDiscountType = _ref.defaultDiscountType,\n      classes = _ref.classes,\n      fields = _ref.fields,\n      _ref$meta = _ref.meta,\n      error = _ref$meta.error,\n      submitFailed = _ref$meta.submitFailed;\n  var items = [{\n    type: FIELDSNAMES.CUSTOMS_DUTIES_FIELD_NAME,\n    display: 'Customs/Duties/Tariffs Amount'\n  }, {\n    type: FIELDSNAMES.DELYVERY_AMOUNT_FIELD_NAME,\n    display: 'Delivery Amount'\n  }, {\n    type: FIELDSNAMES.DELYVERY_INSURANCE_FIELD_NAME,\n    display: 'Delivery Insurance Amount'\n  }, {\n    type: FIELDSNAMES.TRANSACTION_SOURCE_FIELD_NAME,\n    display: 'Transaction Source'\n  }, {\n    type: FIELDSNAMES.DISCOUNTS_FIELDS_NAME,\n    display: 'Discounts'\n  }];\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, submitFailed && error && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, error)), React.createElement(\"div\", {\n    style: {\n      padding: '0'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, fields.map(function (fieldPath, index) {\n    switch (fields.get(index).type) {\n      case FIELDSNAMES.CUSTOMS_DUTIES_FIELD_NAME:\n        {\n          return React.createElement(React.Fragment, null, React.createElement(Divider, {\n            className: classNames(classes.mt20, classes.dividernoPadding),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }), React.createElement(SovosSimpleDynamicTextField, {\n            key: index,\n            labelInput: \"Amount\",\n            title: \"Customs/Duties Amount\",\n            fieldName: \"\".concat(fieldPath, \".amount\"),\n            onRemoveField: function onRemoveField() {\n              return fields.remove(index);\n            },\n            type: \"number\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          }));\n        }\n\n      case FIELDSNAMES.DELYVERY_AMOUNT_FIELD_NAME:\n        {\n          return React.createElement(React.Fragment, null, React.createElement(Divider, {\n            className: classNames(classes.mt20, classes.dividernoPadding),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          }), React.createElement(SovosSimpleDynamicTextField, {\n            key: index,\n            labelInput: \"Amount\",\n            title: \"Delvery Amount\",\n            fieldName: \"\".concat(fieldPath, \".amount\"),\n            onRemoveField: function onRemoveField() {\n              return fields.remove(index);\n            },\n            type: \"number\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          }));\n        }\n\n      case FIELDSNAMES.DELYVERY_INSURANCE_FIELD_NAME:\n        {\n          return React.createElement(React.Fragment, null, React.createElement(Divider, {\n            className: classNames(classes.mt20, classes.dividernoPadding),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }), React.createElement(SovosSimpleDynamicTextField, {\n            key: index,\n            labelInput: \"Amount\",\n            title: \"Delivery Insurance Amount\",\n            fieldName: \"\".concat(fieldPath, \".amount\"),\n            onRemoveField: function onRemoveField() {\n              return fields.remove(index);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          }));\n        }\n\n      case FIELDSNAMES.TRANSACTION_SOURCE_FIELD_NAME:\n        {\n          return React.createElement(React.Fragment, null, React.createElement(Divider, {\n            className: classNames(classes.mt20, classes.dividernoPadding),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103\n            },\n            __self: this\n          }), React.createElement(SovosSimpleDynamicTextField, {\n            key: index,\n            labelInput: \"Transaction Source\",\n            title: \"Transaction Source\",\n            fieldName: \"\".concat(fieldPath, \".transactionSource\"),\n            onRemoveField: function onRemoveField() {\n              return fields.remove(index);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104\n            },\n            __self: this\n          }));\n        }\n\n      case FIELDSNAMES.DISCOUNTS_FIELDS_NAME:\n        {\n          return React.createElement(React.Fragment, null, React.createElement(Divider, {\n            className: classNames(classes.mt20, classes.dividernoPadding),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117\n            },\n            __self: this\n          }), React.createElement(Discounts, {\n            key: index,\n            discounts: fields.get(index).discounts,\n            onRemoveDiscounts: function onRemoveDiscounts() {\n              return fields.remove(index);\n            },\n            fieldName: \"\".concat(fieldPath, \".discounts\"),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118\n            },\n            __self: this\n          }));\n        }\n\n      default:\n        {\n          return React.createElement(\"h1\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128\n            },\n            __self: this\n          }, \"Pow\");\n        }\n    }\n  })), React.createElement(Divider, {\n    className: classNames(classes.mt20, classes.dividernoPadding),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      paddingTop: '20px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(SovosButtonShowMenus, {\n    label: \"Add Calculation Set-up Items\",\n    items: items,\n    onItemSelected: function onItemSelected(item) {\n      if (item.type === FIELDSNAMES.DISCOUNTS_FIELDS_NAME) {\n        fields.push({\n          type: item.type,\n          discounts: [{\n            type: defaultDiscountType,\n            amount: ''\n          }]\n        });\n      } else {\n        fields.push({\n          type: item.type\n        });\n      }\n    },\n    itemsSelected: fields.getAll(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  })));\n};\n\nAdditionalFields.propTypes = {\n  classes: PropTypes.any.isRequired,\n  fields: PropTypes.any.isRequired,\n  meta: PropTypes.any.isRequired,\n  defaultDiscountType: PropTypes.string\n};\nexport default connect(function (state) {\n  return {\n    defaultDiscountType: state.organizationInfo.organizationDefaultSets.discntTpCd\n  };\n})(withStyles(styles)(AdditionalFields));","map":{"version":3,"sources":["F:\\demo-sovos\\src\\tax-calculator\\components\\CalculationSetup\\dynamic-components\\AdditionalFields.js"],"names":["FIELDSNAMES","PropTypes","SovosSimpleDynamicTextField","React","Discounts","SovosButtonShowMenus","withStyles","classNames","Divider","connect","styles","mt20","marginTop","dividernoPadding","marginLeft","marginRight","AdditionalFields","defaultDiscountType","classes","fields","meta","error","submitFailed","items","type","CUSTOMS_DUTIES_FIELD_NAME","display","DELYVERY_AMOUNT_FIELD_NAME","DELYVERY_INSURANCE_FIELD_NAME","TRANSACTION_SOURCE_FIELD_NAME","DISCOUNTS_FIELDS_NAME","padding","map","fieldPath","index","get","remove","discounts","paddingTop","item","push","amount","getAll","propTypes","any","isRequired","string","state","organizationInfo","organizationDefaultSets","discntTpCd"],"mappings":"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","sourcesContent":["import * as FIELDSNAMES from '../calculationSetupConstants';\nimport PropTypes from 'prop-types';\nimport SovosSimpleDynamicTextField from '../../../../util/SovosSimpleDynamicTextField';\nimport React from 'react';\nimport Discounts from './Discounts';\nimport SovosButtonShowMenus from '../../../../util/SovosButtonShowMenus';\nimport { withStyles } from '@material-ui/core';\nimport classNames from 'classnames';\nimport Divider from '@material-ui/core/Divider';\nimport { connect } from 'react-redux';\n\nconst styles = () => ({\n  mt20: {\n    marginTop: 20\n  },\n  dividernoPadding: {\n    marginLeft: '-20px',\n    marginRight: '-20px'\n  }\n});\nconst AdditionalFields = ({ defaultDiscountType, classes, fields, meta: { error, submitFailed } }) => {\n  const items = [\n    {\n      type: FIELDSNAMES.CUSTOMS_DUTIES_FIELD_NAME,\n      display: 'Customs/Duties/Tariffs Amount'\n    },\n    {\n      type: FIELDSNAMES.DELYVERY_AMOUNT_FIELD_NAME,\n      display: 'Delivery Amount'\n    },\n    {\n      type: FIELDSNAMES.DELYVERY_INSURANCE_FIELD_NAME,\n      display: 'Delivery Insurance Amount'\n    },\n    {\n      type: FIELDSNAMES.TRANSACTION_SOURCE_FIELD_NAME,\n      display: 'Transaction Source'\n    },\n    {\n      type: FIELDSNAMES.DISCOUNTS_FIELDS_NAME,\n      display: 'Discounts'\n    }\n  ];\n  return (\n    <div>\n      <div>\n        {submitFailed && error && <span>{error}</span>}\n      </div>\n      <div style={ {\n        padding: '0',\n      } }\n      >\n        {\n          fields.map((fieldPath, index) => {\n            switch (fields.get(index).type) {\n              case FIELDSNAMES.CUSTOMS_DUTIES_FIELD_NAME: {\n                return (\n                  <>\n                    <Divider className={ classNames(classes.mt20, classes.dividernoPadding) } />\n                    <SovosSimpleDynamicTextField\n                      key={ index }\n                      labelInput=\"Amount\"\n                      title=\"Customs/Duties Amount\"\n                      fieldName={ `${fieldPath}.amount` }\n                      onRemoveField={ () => fields.remove(index) }\n                      type=\"number\"\n                    />\n                  </>\n                );\n              }\n              case FIELDSNAMES.DELYVERY_AMOUNT_FIELD_NAME: {\n                return (\n                  <>\n                    <Divider className={ classNames(classes.mt20, classes.dividernoPadding) } />\n                    <SovosSimpleDynamicTextField\n                      key={ index }\n                      labelInput=\"Amount\"\n                      title=\"Delvery Amount\"\n                      fieldName={ `${fieldPath}.amount` }\n                      onRemoveField={ () => fields.remove(index) }\n                      type=\"number\"\n                    />\n                  </>\n                );\n              }\n              case FIELDSNAMES.DELYVERY_INSURANCE_FIELD_NAME: {\n                return (\n                  <>\n                    <Divider className={ classNames(classes.mt20, classes.dividernoPadding) } />\n                    <SovosSimpleDynamicTextField\n                      key={ index }\n                      labelInput=\"Amount\"\n                      title=\"Delivery Insurance Amount\"\n                      fieldName={ `${fieldPath}.amount` }\n                      onRemoveField={ () => fields.remove(index) }\n                    />\n                  </>\n                );\n              }\n              case FIELDSNAMES.TRANSACTION_SOURCE_FIELD_NAME: {\n                return (\n                  <>\n                    <Divider className={ classNames(classes.mt20, classes.dividernoPadding) } />\n                    <SovosSimpleDynamicTextField\n                      key={ index }\n                      labelInput=\"Transaction Source\"\n                      title=\"Transaction Source\"\n                      fieldName={ `${fieldPath}.transactionSource` }\n                      onRemoveField={ () => fields.remove(index) }\n                    />\n                  </>\n                );\n              }\n              case FIELDSNAMES.DISCOUNTS_FIELDS_NAME: {\n                return (\n                  <>\n                    <Divider className={ classNames(classes.mt20, classes.dividernoPadding) } />\n                    <Discounts\n                      key={ index }\n                      discounts={ fields.get(index).discounts }\n                      onRemoveDiscounts={ () => fields.remove(index) }\n                      fieldName={ `${fieldPath}.discounts` }\n                    />\n                  </>\n                );\n              }\n              default: {\n                return <h1>Pow</h1>;\n              }\n            }\n\n          })\n        }\n      </div>\n      <Divider className={ classNames(classes.mt20, classes.dividernoPadding) } />\n      <div style={{ paddingTop: '20px' }}>\n        <SovosButtonShowMenus\n          label=\"Add Calculation Set-up Items\"\n          items={ items }\n          onItemSelected={ (item) => {\n            if (item.type === FIELDSNAMES.DISCOUNTS_FIELDS_NAME) {\n              fields.push({ type: item.type, discounts: [{ type: defaultDiscountType, amount: '' }] });\n\n            } else {\n              fields.push({ type: item.type });\n            }\n          } }\n          itemsSelected={ fields.getAll() }\n        />\n\n      </div>\n\n    </div>\n  );\n};\n\nAdditionalFields.propTypes = {\n  classes: PropTypes.any.isRequired,\n  fields: PropTypes.any.isRequired,\n  meta: PropTypes.any.isRequired,\n  defaultDiscountType: PropTypes.string\n};\n\nexport default  connect((state) => ({\n  defaultDiscountType: state.organizationInfo.organizationDefaultSets.discntTpCd\n}))(withStyles(styles)(AdditionalFields));\n"]},"metadata":{},"sourceType":"module"}