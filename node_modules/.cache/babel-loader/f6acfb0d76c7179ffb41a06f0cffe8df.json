{"ast":null,"code":"import _classCallCheck from \"F:\\\\demo-sovos\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\demo-sovos\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\demo-sovos\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\demo-sovos\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\demo-sovos\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\demo-sovos\\\\src\\\\tax-calculator\\\\components\\\\DataPointLineItems\\\\DataPointLineItems.js\";\nimport React from 'react';\nimport Card from '@material-ui/core/Card';\nimport { withStyles } from '@material-ui/core/styles';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent'; // import AddIcon from '@material-ui/icons/Add';\n\nimport green from '@material-ui/core/colors/green';\nimport { FieldArray } from 'redux-form'; // import classNames from 'classnames';\n// import { Button } from '@material-ui/core';\n// import ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\n// import ActionDelete from '@material-ui/icons/Clear';\n// import SovosIconButton from 's1-ui/sovos-icon-button';\n\nimport AdditionalFields from './AdditionalFields';\nimport PropTypes from 'prop-types';\n\nvar styles = function styles(theme) {\n  console.log('theme', theme);\n  return {\n    card: {\n      marginTop: '20px'\n    },\n    cardContent: {\n      padding: '0px',\n      borderTop: '1px solid #e6e6e6',\n      borderBottom: '1px solid #e6e6e6'\n    },\n    cardHeader: {\n      padding: '20px'\n    },\n    footer: {\n      padding: '20px',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      borderTop: '1px solid rgb(230, 230, 230)'\n    },\n    addButton: {\n      background: '#fff',\n      border: 0\n    },\n    iconAdd: {\n      color: green[500],\n      marginTop: '0.8em'\n    },\n    field: {\n      marginLeft: '20px'\n    },\n    lineItem: {\n      width: '15%'\n    },\n    quantity: {\n      width: '9%'\n    },\n    serviceCode: {\n      width: '22%'\n    },\n    useCode: {\n      width: '22%'\n    },\n    grossAmount: {\n      width: '15%'\n    },\n    addDataPoints: {\n      width: '300px',\n      borderBottom: '1px solid rgba(0, 0, 0, 0.42)'\n    }\n  };\n}; // const renderAddDataPoints = ({classes, fields, meta: { touched, error } }) => (\n//   <div>\n//     {\n//       fields.map((data,index) => (\n//         <div\n//           style = { {padding: '10px 20px 10px 20px'} }\n//           key= { index }\n//         >\n//           <p style= { {display:'inline-block', marginTop:'25px'} }> {index + 1 }.) </p>\n//           <Field\n//             className={ classNames(classes.field, classes.lineItem) }\n//             name={ `${data}.lineItemNumber` }\n//             component={ RenderTextField }\n//             label =\"Line Item Number\"\n//           />\n//           <Field\n//             className={ classNames(classes.field, classes.quantity) }\n//             name={ `${data}.quantity` }\n//             component={ RenderTextField }\n//             label =\"Quantity\"\n//           />\n//           <Field\n//             className={ classNames(classes.field, classes.serviceCode) }\n//             name={ `${data}.serviceCode` }\n//             component={ RenderTextField }\n//             label =\"Goods/Service Code\"\n//           />\n//           <Field\n//             className={ classNames(classes.field, classes.useCode) }\n//             name={ `${data}.useCode` }\n//             component={ RenderTextField }\n//             label =\"Entity / Use Code\"\n//           />\n//           <Field\n//             className={ classNames(classes.field, classes.grossAmount) }\n//             name={ `${data}.grossAmount` }\n//             component={ RenderTextField }\n//             label =\"Gross Amount\"\n//           />\n//           {\n//             fields && fields.length >= 2 ?\n//               <SovosIconButton\n//                 style= { {marginLeft:'10px'} }\n//                 size=\"medium\"\n//                 onClick={ () => fields.remove(index) }\n//               >\n//                 <ActionDelete />\n//               </SovosIconButton>\n//               : null\n//           }\n//         </div>\n//       ))\n//     }\n//     <div\n//       className={ classes.footer }\n//       style={ { display: 'flex', justifyContent: 'flex-end', marginTop: '18px' } }\n//     >\n//       <AddIcon style= { {marginTop:'8px', color: green[500],marginRight:'10px'} } />\n//       <div>\n//         <Button\n//           style = { { ':hover':{ backgroundColor: 'red' },border:0, borderBottom:'1px solid #e6e6e6',borderRadius: 0,\n//             padding:'5px 200px 5px 0',textTransform: 'capitalize',color: 'rgba(0,0,0,0.9)', fontWeight:'400' } }\n//           className={ classes.addButton }\n//           onClick={ () => fields.push({}) }\n//         >\n//           <ArrowDropDownIcon style={ { position:'absolute', top: '5px', right: '0px' } } />\n//               Add Data Points\n//         </Button>\n//       </div>\n//     </div>\n//   </div>\n// );\n\n\nvar DataPointLineItems =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DataPointLineItems, _React$Component);\n\n  function DataPointLineItems(props) {\n    var _this;\n\n    _classCallCheck(this, DataPointLineItems);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DataPointLineItems).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(DataPointLineItems, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(Card, {\n        className: classes.card,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        className: classes.cardHeader,\n        title: \"Data Point Line Items\",\n        subheader: \"Tax Calculation will be performed on these values. Add and remove lines as needed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(CardContent, {\n        className: classes.cardContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(FieldArray, {\n        name: \"AddDataPoints\",\n        component: AdditionalFields,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return DataPointLineItems;\n}(React.Component);\n\nDataPointLineItems.propTypes = {\n  classes: PropTypes.any.isRequired\n};\nDataPointLineItems.defaultProps = {\n  classes: function classes() {}\n};\nexport default withStyles(styles)(DataPointLineItems);","map":{"version":3,"sources":["F:\\demo-sovos\\src\\tax-calculator\\components\\DataPointLineItems\\DataPointLineItems.js"],"names":["React","Card","withStyles","CardHeader","CardContent","green","FieldArray","AdditionalFields","PropTypes","styles","theme","console","log","card","marginTop","cardContent","padding","borderTop","borderBottom","cardHeader","footer","display","alignItems","justifyContent","addButton","background","border","iconAdd","color","field","marginLeft","lineItem","width","quantity","serviceCode","useCode","grossAmount","addDataPoints","DataPointLineItems","props","state","classes","Component","propTypes","any","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport { withStyles } from '@material-ui/core/styles';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\n// import AddIcon from '@material-ui/icons/Add';\nimport green from '@material-ui/core/colors/green';\nimport { FieldArray } from 'redux-form';\n// import classNames from 'classnames';\n// import { Button } from '@material-ui/core';\n// import ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\n// import ActionDelete from '@material-ui/icons/Clear';\n// import SovosIconButton from 's1-ui/sovos-icon-button';\nimport AdditionalFields from './AdditionalFields';\nimport PropTypes from 'prop-types';\n\nconst styles = theme => {\n  console.log('theme',theme);\n  return ({\n    card : { marginTop: '20px' },\n    cardContent: { padding: '0px', borderTop: '1px solid #e6e6e6', borderBottom: '1px solid #e6e6e6' },\n    cardHeader: { padding: '20px' },\n    footer: { padding: '20px', display: 'flex', alignItems: 'center', justifyContent: 'flex-end',borderTop:'1px solid rgb(230, 230, 230)' },\n    addButton: { background:'#fff', border:0 },\n    iconAdd: { color: green[500], marginTop: '0.8em' },\n    field: { marginLeft: '20px' },\n    lineItem: {width: '15%'},\n    quantity: {width: '9%'},\n    serviceCode: { width: '22%'},\n    useCode: {width:'22%'},\n    grossAmount: {width: '15%'},\n    addDataPoints: {width: '300px', borderBottom: '1px solid rgba(0, 0, 0, 0.42)'}\n\n  });};\n\n// const renderAddDataPoints = ({classes, fields, meta: { touched, error } }) => (\n//   <div>\n//     {\n//       fields.map((data,index) => (\n//         <div\n//           style = { {padding: '10px 20px 10px 20px'} }\n//           key= { index }\n//         >\n//           <p style= { {display:'inline-block', marginTop:'25px'} }> {index + 1 }.) </p>\n//           <Field\n//             className={ classNames(classes.field, classes.lineItem) }\n//             name={ `${data}.lineItemNumber` }\n//             component={ RenderTextField }\n//             label =\"Line Item Number\"\n//           />\n//           <Field\n//             className={ classNames(classes.field, classes.quantity) }\n//             name={ `${data}.quantity` }\n//             component={ RenderTextField }\n//             label =\"Quantity\"\n//           />\n//           <Field\n//             className={ classNames(classes.field, classes.serviceCode) }\n//             name={ `${data}.serviceCode` }\n//             component={ RenderTextField }\n//             label =\"Goods/Service Code\"\n//           />\n//           <Field\n//             className={ classNames(classes.field, classes.useCode) }\n//             name={ `${data}.useCode` }\n//             component={ RenderTextField }\n//             label =\"Entity / Use Code\"\n//           />\n//           <Field\n//             className={ classNames(classes.field, classes.grossAmount) }\n//             name={ `${data}.grossAmount` }\n//             component={ RenderTextField }\n//             label =\"Gross Amount\"\n//           />\n\n//           {\n//             fields && fields.length >= 2 ?\n//               <SovosIconButton\n//                 style= { {marginLeft:'10px'} }\n//                 size=\"medium\"\n//                 onClick={ () => fields.remove(index) }\n//               >\n//                 <ActionDelete />\n//               </SovosIconButton>\n//               : null\n//           }\n\n//         </div>\n//       ))\n//     }\n//     <div\n//       className={ classes.footer }\n//       style={ { display: 'flex', justifyContent: 'flex-end', marginTop: '18px' } }\n//     >\n//       <AddIcon style= { {marginTop:'8px', color: green[500],marginRight:'10px'} } />\n//       <div>\n//         <Button\n//           style = { { ':hover':{ backgroundColor: 'red' },border:0, borderBottom:'1px solid #e6e6e6',borderRadius: 0,\n//             padding:'5px 200px 5px 0',textTransform: 'capitalize',color: 'rgba(0,0,0,0.9)', fontWeight:'400' } }\n//           className={ classes.addButton }\n//           onClick={ () => fields.push({}) }\n//         >\n//           <ArrowDropDownIcon style={ { position:'absolute', top: '5px', right: '0px' } } />\n//               Add Data Points\n//         </Button>\n//       </div>\n//     </div>\n\n//   </div>\n// );\n\n\nclass DataPointLineItems extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <Card className = { classes.card }>\n        <CardHeader\n          className={ classes.cardHeader }\n          title=\"Data Point Line Items\"\n          subheader=\"Tax Calculation will be performed on these values. Add and remove lines as needed\"\n        />\n        <CardContent\n          className={ classes.cardContent }\n        >\n          {/* <FieldArray\n            classes={ classes }\n            name=\"renderDataPoints\"\n            component={ renderAddDataPoints }\n          /> */}\n        </CardContent>\n        <div>\n          <FieldArray\n            name=\"AddDataPoints\"\n            component={ AdditionalFields }\n          />\n        </div>\n\n      </Card>\n    );\n  }\n\n}\n\nDataPointLineItems.propTypes = {\n  classes: PropTypes.any.isRequired\n};\nDataPointLineItems.defaultProps = {\n  classes: () => { }\n};\n\nexport default withStyles(styles)(DataPointLineItems);\n\n"]},"metadata":{},"sourceType":"module"}