{"ast":null,"code":"import _classCallCheck from \"C:\\\\SD10001918\\\\Development\\\\Branches\\\\main-source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\SD10001918\\\\Development\\\\Branches\\\\main-source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\SD10001918\\\\Development\\\\Branches\\\\main-source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\SD10001918\\\\Development\\\\Branches\\\\main-source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\SD10001918\\\\Development\\\\Branches\\\\main-source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _defineProperty from \"C:\\\\SD10001918\\\\Development\\\\Branches\\\\main-source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\SD10001918\\\\Development\\\\Branches\\\\main-source\\\\src\\\\tax-calculator\\\\components\\\\DataPointLineItems\\\\index.js\";\nimport React from 'react';\nimport Card from '@material-ui/core/Card';\nimport { withStyles } from '@material-ui/core/styles';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport AddIcon from '@material-ui/icons/Add';\nimport green from '@material-ui/core/colors/green';\nimport RenderTextField from './RenderTextField';\nimport RenderSelectField from './RenderSelectField';\nimport { Field } from 'redux-form';\nimport classNames from 'classnames';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { required } from './validation';\n\nvar styles = function styles(theme) {\n  var _footer;\n\n  return {\n    card: {\n      marginTop: '20px'\n    },\n    cardContent: {\n      padding: '20px',\n      borderTop: '1px solid #e6e6e6',\n      borderBottom: '1px solid #e6e6e6'\n    },\n    cardHeader: {\n      padding: '20px'\n    },\n    footer: (_footer = {\n      padding: '20px',\n      display: 'flex'\n    }, _defineProperty(_footer, \"padding\", '16px'), _defineProperty(_footer, \"alignItems\", 'center'), _defineProperty(_footer, \"justifyContent\", 'flex-end'), _footer),\n    iconAdd: {\n      color: green[500],\n      marginTop: '0.8em'\n    },\n    field: {\n      marginLeft: '20px'\n    },\n    lineItem: {\n      width: '150px'\n    },\n    quantity: {\n      width: '90px'\n    },\n    serviceCode: {\n      width: '250px'\n    },\n    useCode: {\n      width: '250px'\n    },\n    grossAmount: {\n      width: '150px'\n    },\n    addDataPoints: {\n      width: '300px',\n      borderBottom: '1px solid rgba(0, 0, 0, 0.42)'\n    }\n  };\n};\n\nvar DataPointLineItems =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DataPointLineItems, _React$Component);\n\n  function DataPointLineItems(props) {\n    var _this;\n\n    _classCallCheck(this, DataPointLineItems);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DataPointLineItems).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(DataPointLineItems, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(Card, {\n        className: classes.card,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        className: classes.cardHeader,\n        title: \"Data Point Line Items\",\n        subheader: \"Tax Calculation will be performed on these values. Add and remove lines as needed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(CardContent, {\n        className: classes.cardContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          display: 'inline-block',\n          marginTop: '25px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \" 1.) \"), React.createElement(Field, {\n        className: classNames(classes.field, classes.lineItem),\n        validate: [required],\n        name: \"lineItemNumber\",\n        component: RenderTextField,\n        label: \"Line Item Number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(Field, {\n        className: classNames(classes.field, classes.quantity),\n        validate: [required],\n        name: \"quantity\",\n        component: RenderTextField,\n        label: \"Quantity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(Field, {\n        className: classNames(classes.field, classes.serviceCode),\n        validate: [required],\n        name: \"serviceCode\",\n        component: RenderTextField,\n        label: \"Goods/Service Code\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(Field, {\n        className: classNames(classes.field, classes.useCode),\n        validate: [required],\n        name: \"useCode\",\n        component: RenderTextField,\n        label: \"Entity / Use Code\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(Field, {\n        className: classNames(classes.field, classes.grossAmount),\n        validate: [required],\n        name: \"grossAmount\",\n        component: RenderTextField,\n        label: \"Gross Amount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: classes.footer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(AddIcon, {\n        className: classes.iconAdd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(Field, {\n        inputProps: {\n          name: 'adDataPoints',\n          id: 'add-data'\n        },\n        className: classes.addDataPoints,\n        name: \"addDataPoints\",\n        component: RenderSelectField,\n        label: \"Add Data Points\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        value: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"1 - Forward calculation\"), React.createElement(MenuItem, {\n        value: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"2 - Tax inclusive gross amount back calculation\"), React.createElement(MenuItem, {\n        value: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"5 - Tax to gross calculation with force distribution\"))));\n    }\n  }]);\n\n  return DataPointLineItems;\n}(React.Component);\n\nexport default withStyles(styles)(DataPointLineItems);","map":{"version":3,"sources":["C:\\SD10001918\\Development\\Branches\\main-source\\src\\tax-calculator\\components\\DataPointLineItems\\index.js"],"names":["React","Card","withStyles","CardHeader","CardContent","AddIcon","green","RenderTextField","RenderSelectField","Field","classNames","MenuItem","required","styles","theme","card","marginTop","cardContent","padding","borderTop","borderBottom","cardHeader","footer","display","iconAdd","color","field","marginLeft","lineItem","width","quantity","serviceCode","useCode","grossAmount","addDataPoints","DataPointLineItems","props","state","classes","name","id","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,KAAP,MAAkB,gCAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,QAAT,QAAyB,cAAzB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK,EAAI;AAAA;;AAAE,SAAQ;AAChCC,IAAAA,IAAI,EAAG;AAAEC,MAAAA,SAAS,EAAE;AAAb,KADyB;AAEhCC,IAAAA,WAAW,EAAE;AAAEC,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,SAAS,EAAE,mBAA9B;AAAmDC,MAAAA,YAAY,EAAE;AAAjE,KAFmB;AAGhCC,IAAAA,UAAU,EAAE;AAAEH,MAAAA,OAAO,EAAE;AAAX,KAHoB;AAIhCI,IAAAA,MAAM;AAAIJ,MAAAA,OAAO,EAAE,MAAb;AAAqBK,MAAAA,OAAO,EAAE;AAA9B,2CAA+C,MAA/C,0CAAmE,QAAnE,8CAA6F,UAA7F,WAJ0B;AAKhCC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,KAAK,EAAEnB,KAAK,CAAC,GAAD,CAAd;AAAqBU,MAAAA,SAAS,EAAE;AAAhC,KALuB;AAMhCU,IAAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE;AAAd,KANyB;AAOhCC,IAAAA,QAAQ,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR,KAPsB;AAQhCC,IAAAA,QAAQ,EAAE;AAACD,MAAAA,KAAK,EAAE;AAAR,KARsB;AAShCE,IAAAA,WAAW,EAAE;AAAEF,MAAAA,KAAK,EAAE;AAAT,KATmB;AAUhCG,IAAAA,OAAO,EAAE;AAACH,MAAAA,KAAK,EAAC;AAAP,KAVuB;AAWhCI,IAAAA,WAAW,EAAE;AAACJ,MAAAA,KAAK,EAAE;AAAR,KAXmB;AAYhCK,IAAAA,aAAa,EAAE;AAACL,MAAAA,KAAK,EAAE,OAAR;AAAiBT,MAAAA,YAAY,EAAE;AAA/B;AAZiB,GAAR;AAezB,CAfD;;IAkBMe,kB;;;;;AACJ,8BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,4FAAMA,KAAN;AACA,UAAKC,KAAL,GAAa,EAAb;AAFiB;AAGlB;;;;6BAEQ;AAAA,UACCC,OADD,GACa,KAAKF,KADlB,CACCE,OADD;AAEP,aACE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAIA,OAAO,CAACvB,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACM,oBAAC,UAAD;AACI,QAAA,SAAS,EAAEuB,OAAO,CAACjB,UADvB;AAEI,QAAA,KAAK,EAAC,uBAFV;AAGI,QAAA,SAAS,EAAC,mFAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADN,EAKM,oBAAC,WAAD;AACI,QAAA,SAAS,EAAEiB,OAAO,CAACrB,WADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,KAAK,EAAG;AAACM,UAAAA,OAAO,EAAC,cAAT;AAAyBP,UAAAA,SAAS,EAAC;AAAnC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAEN,UAAU,CAAC4B,OAAO,CAACZ,KAAT,EAAgBY,OAAO,CAACV,QAAxB,CAA5B;AAA+D,QAAA,QAAQ,EAAE,CAAChB,QAAD,CAAzE;AAAqF,QAAA,IAAI,EAAC,gBAA1F;AAA2G,QAAA,SAAS,EAAEL,eAAtH;AAAuI,QAAA,KAAK,EAAE,kBAA9I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAEG,UAAU,CAAC4B,OAAO,CAACZ,KAAT,EAAgBY,OAAO,CAACR,QAAxB,CAA5B;AAA+D,QAAA,QAAQ,EAAE,CAAClB,QAAD,CAAzE;AAAsF,QAAA,IAAI,EAAC,UAA3F;AAAsG,QAAA,SAAS,EAAEL,eAAjH;AAAkI,QAAA,KAAK,EAAE,UAAzI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAEG,UAAU,CAAC4B,OAAO,CAACZ,KAAT,EAAgBY,OAAO,CAACP,WAAxB,CAA5B;AAAkE,QAAA,QAAQ,EAAE,CAACnB,QAAD,CAA5E;AAAyF,QAAA,IAAI,EAAC,aAA9F;AAA4G,QAAA,SAAS,EAAEL,eAAvH;AAAwI,QAAA,KAAK,EAAE,oBAA/I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAKE,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAEG,UAAU,CAAC4B,OAAO,CAACZ,KAAT,EAAgBY,OAAO,CAACN,OAAxB,CAA5B;AAA8D,QAAA,QAAQ,EAAE,CAACpB,QAAD,CAAxE;AAAqF,QAAA,IAAI,EAAC,SAA1F;AAAoG,QAAA,SAAS,EAAEL,eAA/G;AAAgI,QAAA,KAAK,EAAE,mBAAvI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAME,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAEG,UAAU,CAAC4B,OAAO,CAACZ,KAAT,EAAgBY,OAAO,CAACL,WAAxB,CAA5B;AAAkE,QAAA,QAAQ,EAAE,CAACrB,QAAD,CAA5E;AAAyF,QAAA,IAAI,EAAC,aAA9F;AAA4G,QAAA,SAAS,EAAEL,eAAvH;AAAwI,QAAA,KAAK,EAAE,cAA/I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CAHA,CALN,EAqBM;AAAK,QAAA,SAAS,EAAE+B,OAAO,CAAChB,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAS,QAAA,SAAS,EAAEgB,OAAO,CAACd,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,KAAD;AACI,QAAA,UAAU,EAAE;AACZe,UAAAA,IAAI,EAAE,cADM;AAEZC,UAAAA,EAAE,EAAE;AAFQ,SADhB;AAKI,QAAA,SAAS,EAAEF,OAAO,CAACJ,aALvB;AAMI,QAAA,IAAI,EAAC,eANT;AAOI,QAAA,SAAS,EAAE1B,iBAPf;AAQI,QAAA,KAAK,EAAC,iBARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAgBF,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAhBE,EAiBF,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DAjBE,EAkBF,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEAlBE,CAFJ,CArBN,CADF;AA+CD;;;;EAvD8BR,KAAK,CAACyC,S;;AA2DvC,eAAevC,UAAU,CAACW,MAAD,CAAV,CAAmBsB,kBAAnB,CAAf","sourcesContent":["import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport { withStyles } from '@material-ui/core/styles';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport AddIcon from '@material-ui/icons/Add';\nimport green from '@material-ui/core/colors/green';\nimport RenderTextField from './RenderTextField';\nimport RenderSelectField from './RenderSelectField';\nimport { Field } from 'redux-form';\nimport classNames from 'classnames';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { required } from './validation';\n\nconst styles = theme => { return ({\n  card : { marginTop: '20px' },\n  cardContent: { padding: '20px', borderTop: '1px solid #e6e6e6', borderBottom: '1px solid #e6e6e6' },\n  cardHeader: { padding: '20px' },\n  footer: { padding: '20px', display: 'flex', padding: '16px', alignItems: 'center', justifyContent: 'flex-end' },\n  iconAdd: { color: green[500], marginTop: '0.8em' },\n  field: { marginLeft: '20px' },\n  lineItem: {width: '150px'},\n  quantity: {width: '90px'},\n  serviceCode: { width: '250px'},\n  useCode: {width:'250px'},\n  grossAmount: {width: '150px'},\n  addDataPoints: {width: '300px', borderBottom: '1px solid rgba(0, 0, 0, 0.42)'}\n\n})\n};\n\n\nclass DataPointLineItems extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {}\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <Card className = {classes.card}>\n            <CardHeader\n                className={classes.cardHeader}\n                title=\"Data Point Line Items\"\n                subheader=\"Tax Calculation will be performed on these values. Add and remove lines as needed\" />\n            <CardContent\n                className={classes.cardContent}\n            >\n            <div>\n              <p style= {{display:'inline-block', marginTop:'25px'}}> 1.) </p>\n              <Field className={classNames(classes.field, classes.lineItem)} validate={[required]} name=\"lineItemNumber\" component={RenderTextField} label =\"Line Item Number\" />\n              <Field className={classNames(classes.field, classes.quantity)} validate={[required]}  name=\"quantity\" component={RenderTextField} label =\"Quantity\" />\n              <Field className={classNames(classes.field, classes.serviceCode)} validate={[required]}  name=\"serviceCode\" component={RenderTextField} label =\"Goods/Service Code\" />\n              <Field className={classNames(classes.field, classes.useCode)} validate={[required]}  name=\"useCode\" component={RenderTextField} label =\"Entity / Use Code\" />\n              <Field className={classNames(classes.field, classes.grossAmount)} validate={[required]}  name=\"grossAmount\" component={RenderTextField} label =\"Gross Amount\" />\n\n\n\n            </div>\n\n            </CardContent>\n            <div className={classes.footer}>\n                <AddIcon className={classes.iconAdd} />\n                <Field\n                    inputProps={{\n                    name: 'adDataPoints',\n                    id: 'add-data',\n                    }}\n                    className={classes.addDataPoints}\n                    name=\"addDataPoints\"\n                    component={RenderSelectField}\n                    label=\"Add Data Points\"\n                >\n\n                {/* <option value=\"\" />\n                <option value={1}>1 - Forward calculation</option>\n                <option value={2}>2 - Tax inclusive gross amount back calculation</option>\n                <option value={5}>5 - Tax to gross calculation with force distribution</option>\n                <option value={6}>6 - Tax to gross back calculation</option> */}\n              <MenuItem value={1}>1 - Forward calculation</MenuItem>\n              <MenuItem value={2}>2 - Tax inclusive gross amount back calculation</MenuItem>\n              <MenuItem value={3}>5 - Tax to gross calculation with force distribution</MenuItem>\n                </Field>\n            </div>\n        </Card>\n    )\n  }\n\n}\n\nexport default withStyles(styles)(DataPointLineItems);\n\n"]},"metadata":{},"sourceType":"module"}