{"ast":null,"code":"import _slicedToArray from \"C:\\\\SD10001918\\\\Development\\\\Branches\\\\main-source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"C:\\\\SD10001918\\\\Development\\\\Branches\\\\main-source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\SD10001918\\\\Development\\\\Branches\\\\main-source\\\\src\\\\util\\\\SovosButtonShowMenus.js\";\nimport React from 'react';\nimport { Button } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport green from '@material-ui/core/colors/green';\nexport default function SovosButtonShowMenus(_ref) {\n  var label = _ref.label,\n      items = _ref.items,\n      itemsSelected = _ref.itemsSelected,\n      onItemSelected = _ref.onItemSelected,\n      className = _ref.className,\n      custom = _objectWithoutProperties(_ref, [\"label\", \"items\", \"itemsSelected\", \"onItemSelected\", \"className\"]);\n\n  if (items.length === itemsSelected.length) {\n    return React.createElement(React.Fragment, null);\n  }\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  function handleClick(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleClose() {\n    setAnchorEl(null);\n  }\n\n  function handleItemSelected(item) {\n    onItemSelected(item);\n    handleClose();\n  }\n\n  return React.createElement(\"div\", {\n    className: className,\n    style: {\n      display: 'flex',\n      justifyContent: 'flex-end',\n      marginTop: '18px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(AddIcon, {\n    style: {\n      marginTop: '8px',\n      color: green[500],\n      marginRight: '10px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Button, {\n    style: {\n      ':hover': {\n        backgroundColor: 'red'\n      },\n      border: 0,\n      borderBottom: '1px solid #e6e6e6',\n      borderRadius: 0,\n      padding: '5px 100px 5px 0',\n      textTransform: 'capitalize',\n      color: 'rgba(0,0,0,0.9)',\n      fontWeight: '400'\n    },\n    variant: \"outlined\",\n    \"aria-owns\": anchorEl ? 'simple-menu' : undefined,\n    \"aria-haspopup\": \"true\",\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, label, React.createElement(ArrowDropDownIcon, {\n    style: {\n      position: 'absolute',\n      top: '5px',\n      right: '0px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }))), React.createElement(Menu, {\n    id: \"simple-menu\",\n    anchorEl: anchorEl,\n    open: Boolean(anchorEl),\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, items.filter(function (item) {\n    return !itemsSelected.find(function (itemSelected) {\n      return itemSelected.type === item.type;\n    });\n  }).map(function (item, key) {\n    return React.createElement(MenuItem, {\n      key: key,\n      onClick: function onClick() {\n        return handleItemSelected(item);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, item.display);\n  })));\n}","map":{"version":3,"sources":["C:\\SD10001918\\Development\\Branches\\main-source\\src\\util\\SovosButtonShowMenus.js"],"names":["React","Button","AddIcon","Menu","MenuItem","ArrowDropDownIcon","green","SovosButtonShowMenus","label","items","itemsSelected","onItemSelected","className","custom","length","useState","anchorEl","setAnchorEl","handleClick","event","currentTarget","handleClose","handleItemSelected","item","display","justifyContent","marginTop","color","marginRight","backgroundColor","border","borderBottom","borderRadius","padding","textTransform","fontWeight","undefined","position","top","right","Boolean","filter","find","itemSelected","type","map","key"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport green from '@material-ui/core/colors/green';\n\nexport default function SovosButtonShowMenus({ label, items, itemsSelected, onItemSelected, className, ...custom }) {\n  if (items.length === itemsSelected.length) {\n    return (<></>);\n  }\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  function handleClick(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleClose() {\n    setAnchorEl(null);\n  }\n\n  function handleItemSelected(item) {\n    onItemSelected(item)\n    handleClose();\n  }\n\n  return (\n    <div className={ className } style={ { display: 'flex', justifyContent: 'flex-end', marginTop: '18px' } }>\n      <AddIcon style= {{marginTop:'8px', color: green[500], marginRight:'10px'}} />\n\n      <div>\n      <Button style = {{ ':hover':{ backgroundColor: 'red' },border:0, borderBottom:'1px solid #e6e6e6',borderRadius: 0, padding:'5px 100px 5px 0',\n      textTransform: 'capitalize',color: 'rgba(0,0,0,0.9)', fontWeight:'400' }}\n        variant=\"outlined\"\n        aria-owns={ anchorEl ? 'simple-menu' : undefined }\n        aria-haspopup=\"true\"\n        onClick={ handleClick }\n      >\n        { label }\n        <ArrowDropDownIcon style={{ position:'absolute', top: '5px', right: '0px' }} />\n\n      </Button>\n      </div>\n      <Menu id=\"simple-menu\" anchorEl={ anchorEl } open={ Boolean(anchorEl) } onClose={ handleClose }>\n        { items.filter(item => !itemsSelected.find(itemSelected => itemSelected.type === item.type))\n          .map((item, key) => (\n            <MenuItem key={ key } onClick={ () => handleItemSelected(item) }>{ item.display }</MenuItem>\n          )) }\n      </Menu>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}