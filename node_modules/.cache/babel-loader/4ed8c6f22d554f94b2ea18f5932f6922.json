{"ast":null,"code":"var _jsxFileName = \"F:\\\\demo-sovos\\\\src\\\\tax-calculator\\\\components\\\\DataPointLineItems\\\\AdditionalFields.js\";\nimport React from 'react';\nimport { withStyles } from '@material-ui/core';\nimport SovosButtonAddFields from '../../../util/AdditionalFields/SovosButtonAddFields';\nimport PropTypes from 'prop-types';\n\nvar styles = function styles() {\n  return {\n    mt20: {\n      marginTop: 20\n    },\n    dividernoPadding: {\n      marginLeft: '-20px',\n      marginRight: '-20px'\n    }\n  };\n};\n\nvar AdditionalFields = function AdditionalFields(_ref) {\n  var fields = _ref.fields,\n      _ref$meta = _ref.meta,\n      error = _ref$meta.error,\n      submitFailed = _ref$meta.submitFailed;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, submitFailed && error && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, error)), React.createElement(\"div\", {\n    style: {\n      padding: '0'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, fields.map(function (fieldPath, index) {\n    switch (fields.get(index).type) {\n      case 'ACCOUNTING_DATE':\n        {\n          return React.createElement(\"h1\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          }, \"ACCOUNTING_DATE\");\n        }\n\n      case 'DATA_OF_SERVICE_PERFORMANCE':\n        {\n          return React.createElement(\"h1\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }, \"DATA_OF_SERVICE_PERFORMANCE\");\n        }\n\n      case 'CUSTOMER_VENDOR':\n        {\n          return React.createElement(\"h1\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40\n            },\n            __self: this\n          }, \"CUSTOMER_VENDOR\");\n        }\n\n      case 'DELIVERY_TERMS':\n        {\n          return React.createElement(\"h1\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45\n            },\n            __self: this\n          }, \"DELIVERY_TERMS\");\n        }\n\n      case 'DISCOUNTS_DETAILS':\n        {\n          return React.createElement(\"h1\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, \"DISCOUNTS_DETAILS\");\n        }\n    }\n  })), React.createElement(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(SovosButtonAddFields, {\n    label: \"Add Calculation Set-up Items\" // items={ items }\n    ,\n    onItemSelected: function onItemSelected(item) {\n      fields.push({\n        type: item.type\n      });\n    },\n    itemsSelected: fields.getAll(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })));\n};\n\nAdditionalFields.propTypes = {\n  fields: PropTypes.any.isRequired,\n  meta: PropTypes.any.isRequired\n};\nexport default withStyles(styles)(AdditionalFields);","map":{"version":3,"sources":["F:\\demo-sovos\\src\\tax-calculator\\components\\DataPointLineItems\\AdditionalFields.js"],"names":["React","withStyles","SovosButtonAddFields","PropTypes","styles","mt20","marginTop","dividernoPadding","marginLeft","marginRight","AdditionalFields","fields","meta","error","submitFailed","padding","map","fieldPath","index","get","type","item","push","getAll","propTypes","any","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,oBAAP,MAAiC,qDAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAGA,IAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,SAAO;AACpBC,IAAAA,IAAI,EAAE;AACJC,MAAAA,SAAS,EAAE;AADP,KADc;AAIpBC,IAAAA,gBAAgB,EAAE;AAChBC,MAAAA,UAAU,EAAE,OADI;AAEhBC,MAAAA,WAAW,EAAE;AAFG;AAJE,GAAP;AAAA,CAAf;;AASA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,MAAEC,MAAF,QAAEA,MAAF;AAAA,uBAAUC,IAAV;AAAA,MAAkBC,KAAlB,aAAkBA,KAAlB;AAAA,MAAyBC,YAAzB,aAAyBA,YAAzB;AAAA,SACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIA,YAAY,IAAID,KAAhB,IAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQA,KAAR,CAD7B,CADF,EAIE;AAAK,IAAA,KAAK,EAAG;AACXE,MAAAA,OAAO,EAAE;AADE,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKIJ,MAAM,CAACK,GAAP,CAAW,UAACC,SAAD,EAAYC,KAAZ,EAAsB;AAC/B,YAAQP,MAAM,CAACQ,GAAP,CAAWD,KAAX,EAAkBE,IAA1B;AACE,WAAK,iBAAL;AAAwB;AACtB,iBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF;AAGD;;AACD,WAAK,6BAAL;AAAoC;AAClC,iBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADF;AAGD;;AACD,WAAK,iBAAL;AAAwB;AACtB,iBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF;AAGD;;AACD,WAAK,gBAAL;AAAuB;AACrB,iBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF;AAGD;;AACD,WAAK,mBAAL;AAA0B;AACxB,iBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF;AAGD;AAzBH;AA4BD,GA7BD,CALJ,CAJF,EAyCE;AAAK,IAAA,KAAK,EAAG;AAAEL,MAAAA,OAAO,EAAE;AAAX,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,oBAAD;AACE,IAAA,KAAK,EAAC,8BADR,CAEE;AAFF;AAGE,IAAA,cAAc,EAAG,wBAACM,IAAD,EAAU;AACzBV,MAAAA,MAAM,CAACW,IAAP,CAAY;AAAEF,QAAAA,IAAI,EAAEC,IAAI,CAACD;AAAb,OAAZ;AACD,KALH;AAME,IAAA,aAAa,EAAGT,MAAM,CAACY,MAAP,EANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAzCF,CADuB;AAAA,CAAzB;;AAyDAb,gBAAgB,CAACc,SAAjB,GAA6B;AAC3Bb,EAAAA,MAAM,EAAER,SAAS,CAACsB,GAAV,CAAcC,UADK;AAE3Bd,EAAAA,IAAI,EAAET,SAAS,CAACsB,GAAV,CAAcC;AAFO,CAA7B;AAMA,eAAezB,UAAU,CAACG,MAAD,CAAV,CAAmBM,gBAAnB,CAAf","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core';\nimport SovosButtonAddFields from '../../../util/AdditionalFields/SovosButtonAddFields';\nimport PropTypes from 'prop-types';\n\n\nconst styles = () => ({\n  mt20: {\n    marginTop: 20\n  },\n  dividernoPadding: {\n    marginLeft: '-20px',\n    marginRight: '-20px'\n  }\n});\nconst AdditionalFields = ({fields, meta: { error, submitFailed } }) => (\n  <div>\n    <div>\n      { submitFailed && error && <span>{ error }</span> }\n    </div>\n    <div style={ {\n      padding: '0',\n    } }\n    >\n      {\n        fields.map((fieldPath, index) => {\n          switch (fields.get(index).type) {\n            case 'ACCOUNTING_DATE': {\n              return (\n                <h1>ACCOUNTING_DATE</h1>\n              );\n            }\n            case 'DATA_OF_SERVICE_PERFORMANCE': {\n              return (\n                <h1>DATA_OF_SERVICE_PERFORMANCE</h1>\n              );\n            }\n            case 'CUSTOMER_VENDOR': {\n              return (\n                <h1>CUSTOMER_VENDOR</h1>\n              );\n            }\n            case 'DELIVERY_TERMS': {\n              return (\n                <h1>DELIVERY_TERMS</h1>\n              );\n            }\n            case 'DISCOUNTS_DETAILS': {\n              return (\n                <h1>DISCOUNTS_DETAILS</h1>\n              );\n            }\n\n          }\n        })\n      }\n    </div>\n    <div style={ { padding: '20px' } }>\n      <SovosButtonAddFields\n        label=\"Add Calculation Set-up Items\"\n        // items={ items }\n        onItemSelected={ (item) => {\n          fields.push({ type: item.type });\n        } }\n        itemsSelected={ fields.getAll() }\n      />\n\n    </div>\n\n  </div>\n);\n\nAdditionalFields.propTypes = {\n  fields: PropTypes.any.isRequired,\n  meta: PropTypes.any.isRequired,\n};\n\n\nexport default withStyles(styles)(AdditionalFields);\n"]},"metadata":{},"sourceType":"module"}