{"ast":null,"code":"var _jsxFileName = \"C:\\\\SD10001918\\\\Development\\\\Branches\\\\main-source\\\\src\\\\tax-calculator\\\\components\\\\CalculationSetup\\\\dynamic-components\\\\AdditionalFields.js\";\nimport * as FIELDSNAMES from '../calculationSetupConstants';\nimport SovosSimpleDynamicTextField from '../../../../util/SovosSimpleDynamicTextField';\nimport React from 'react';\nimport Discounts from './Discounts';\nimport SovosButtonShowMenus from '../../../../util/SovosButtonShowMenus';\nimport { withStyles } from '@material-ui/core';\nimport classNames from 'classnames';\nimport Divider from '@material-ui/core/Divider';\n\nvar styles = function styles(theme) {\n  return {\n    mt20: {\n      marginTop: 20\n    },\n    dividernoPadding: {\n      marginLeft: '-20px',\n      marginRight: '-20px'\n    }\n  };\n};\n\nvar AdditionalFields = function AdditionalFields(_ref) {\n  var classes = _ref.classes,\n      fields = _ref.fields,\n      _ref$meta = _ref.meta,\n      error = _ref$meta.error,\n      submitFailed = _ref$meta.submitFailed;\n  var items = [{\n    type: FIELDSNAMES.CUSTOMS_DUTIES_FIELD_NAME,\n    display: 'Customs/Duties/Tariffs Amount'\n  }, {\n    type: FIELDSNAMES.DELYVERY_AMOUNT_FIELD_NAME,\n    display: 'Delivery Amount'\n  }, {\n    type: FIELDSNAMES.DELYVERY_INSURANCE_FIELD_NAME,\n    display: 'Delivery Insurance Amount'\n  }, {\n    type: FIELDSNAMES.TRANSACTION_SOURCE_FIELD_NAME,\n    display: 'Transaction Source'\n  }, {\n    type: FIELDSNAMES.DISCOUNTS_FIELDS_NAME,\n    display: 'Discounts'\n  }];\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, submitFailed && error && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, error)), React.createElement(\"div\", {\n    style: {\n      padding: '0'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, fields.map(function (fieldPath, index) {\n    switch (fields.get(index).type) {\n      case FIELDSNAMES.CUSTOMS_DUTIES_FIELD_NAME:\n        {\n          return React.createElement(React.Fragment, null, React.createElement(Divider, {\n            className: classNames(classes.mt20, classes.dividernoPadding),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }), React.createElement(SovosSimpleDynamicTextField, {\n            key: index,\n            labelInput: \"Amount\",\n            title: \"Customs/Duties Amount\",\n            fieldName: \"\".concat(fieldPath, \".amount\"),\n            onRemoveField: function onRemoveField() {\n              return fields.remove(index);\n            },\n            type: \"number\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }));\n        }\n\n      case FIELDSNAMES.DELYVERY_AMOUNT_FIELD_NAME:\n        {\n          return React.createElement(React.Fragment, null, React.createElement(Divider, {\n            className: classNames(classes.mt20, classes.dividernoPadding),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }), React.createElement(SovosSimpleDynamicTextField, {\n            key: index,\n            labelInput: \"Amount\",\n            title: \"Delvery Amount\",\n            fieldName: \"\".concat(fieldPath, \".amount\"),\n            onRemoveField: function onRemoveField() {\n              return fields.remove(index);\n            },\n            type: \"number\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72\n            },\n            __self: this\n          }));\n        }\n\n      case FIELDSNAMES.DELYVERY_INSURANCE_FIELD_NAME:\n        {\n          return React.createElement(React.Fragment, null, React.createElement(Divider, {\n            className: classNames(classes.mt20, classes.dividernoPadding),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }), React.createElement(SovosSimpleDynamicTextField, {\n            key: index,\n            labelInput: \"Amount\",\n            title: \"Delivery Insurance Amount\",\n            fieldName: \"\".concat(fieldPath, \".amount\"),\n            onRemoveField: function onRemoveField() {\n              return fields.remove(index);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87\n            },\n            __self: this\n          }));\n        }\n\n      case FIELDSNAMES.TRANSACTION_SOURCE_FIELD_NAME:\n        {\n          return React.createElement(React.Fragment, null, React.createElement(Divider, {\n            className: classNames(classes.mt20, classes.dividernoPadding),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100\n            },\n            __self: this\n          }), React.createElement(SovosSimpleDynamicTextField, {\n            key: index,\n            labelInput: \"Transaction Source\",\n            title: \"Transaction Source\",\n            fieldName: \"\".concat(fieldPath, \".transactionSource\"),\n            onRemoveField: function onRemoveField() {\n              return fields.remove(index);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101\n            },\n            __self: this\n          }));\n        }\n\n      case FIELDSNAMES.DISCOUNTS_FIELDS_NAME:\n        {\n          return React.createElement(React.Fragment, null, React.createElement(Divider, {\n            className: classNames(classes.mt20, classes.dividernoPadding),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114\n            },\n            __self: this\n          }), React.createElement(Discounts, {\n            key: index,\n            discounts: fields.get(index).discounts,\n            onRemoveDiscounts: function onRemoveDiscounts() {\n              return fields.remove(index);\n            },\n            fieldName: \"\".concat(fieldPath, \".discounts\"),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115\n            },\n            __self: this\n          }));\n        }\n\n      default:\n        {\n          return React.createElement(\"h1\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125\n            },\n            __self: this\n          }, \"Pow\");\n        }\n    }\n  })), React.createElement(Divider, {\n    className: classNames(classes.mt20, classes.dividernoPadding),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(SovosButtonShowMenus, {\n    label: \"Add Calculation Set-up Items\",\n    items: items,\n    onItemSelected: function onItemSelected(item) {\n      if (item.type === FIELDSNAMES.DISCOUNTS_FIELDS_NAME) {\n        fields.push({\n          type: item.type,\n          discounts: [{\n            type: 1,\n            amount: ''\n          }]\n        });\n      } else {\n        fields.push({\n          type: item.type\n        });\n      }\n    },\n    itemsSelected: fields.getAll(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  })));\n};\n\nexport default withStyles(styles)(AdditionalFields);","map":{"version":3,"sources":["C:\\SD10001918\\Development\\Branches\\main-source\\src\\tax-calculator\\components\\CalculationSetup\\dynamic-components\\AdditionalFields.js"],"names":["FIELDSNAMES","SovosSimpleDynamicTextField","React","Discounts","SovosButtonShowMenus","withStyles","classNames","Divider","styles","theme","mt20","marginTop","dividernoPadding","marginLeft","marginRight","AdditionalFields","classes","fields","meta","error","submitFailed","items","type","CUSTOMS_DUTIES_FIELD_NAME","display","DELYVERY_AMOUNT_FIELD_NAME","DELYVERY_INSURANCE_FIELD_NAME","TRANSACTION_SOURCE_FIELD_NAME","DISCOUNTS_FIELDS_NAME","padding","map","fieldPath","index","get","remove","discounts","item","push","amount","getAll"],"mappings":"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","sourcesContent":["import * as FIELDSNAMES from '../calculationSetupConstants';\r\nimport SovosSimpleDynamicTextField from '../../../../util/SovosSimpleDynamicTextField';\r\nimport React from 'react';\r\nimport Discounts from './Discounts';\r\nimport SovosButtonShowMenus from '../../../../util/SovosButtonShowMenus';\r\nimport { withStyles } from '@material-ui/core';\r\nimport classNames from 'classnames'\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst styles = (theme) => ({\r\n  mt20: {\r\n    marginTop: 20\r\n  },\r\n  dividernoPadding: {\r\n    marginLeft: '-20px',\r\n    marginRight: '-20px'\r\n  }\r\n})\r\nconst AdditionalFields = ({ classes, fields, meta: { error, submitFailed } }) => {\r\n  const items = [\r\n    {\r\n      type: FIELDSNAMES.CUSTOMS_DUTIES_FIELD_NAME,\r\n      display: 'Customs/Duties/Tariffs Amount'\r\n    },\r\n    {\r\n      type: FIELDSNAMES.DELYVERY_AMOUNT_FIELD_NAME,\r\n      display: 'Delivery Amount'\r\n    },\r\n    {\r\n      type: FIELDSNAMES.DELYVERY_INSURANCE_FIELD_NAME,\r\n      display: 'Delivery Insurance Amount'\r\n    },\r\n    {\r\n      type: FIELDSNAMES.TRANSACTION_SOURCE_FIELD_NAME,\r\n      display: 'Transaction Source'\r\n    },\r\n    {\r\n      type: FIELDSNAMES.DISCOUNTS_FIELDS_NAME,\r\n      display: 'Discounts'\r\n    }\r\n  ];\r\n  return (\r\n    <div>\r\n      <div>\r\n        { submitFailed && error && <span>{ error }</span> }\r\n      </div>\r\n      <div style={ {\r\n        padding: '0',\r\n      } }>\r\n        {\r\n          fields.map((fieldPath, index) => {\r\n            switch (fields.get(index).type) {\r\n              case FIELDSNAMES.CUSTOMS_DUTIES_FIELD_NAME: {\r\n                return (\r\n                  <>\r\n                    <Divider className={ classNames(classes.mt20, classes.dividernoPadding) } />\r\n                    <SovosSimpleDynamicTextField\r\n                      key={ index }\r\n                      labelInput=\"Amount\"\r\n                      title=\"Customs/Duties Amount\"\r\n                      fieldName={ `${ fieldPath }.amount` }\r\n                      onRemoveField={ () => fields.remove(index) }\r\n                      type=\"number\"\r\n                    />\r\n                  </>\r\n                )\r\n              }\r\n              case FIELDSNAMES.DELYVERY_AMOUNT_FIELD_NAME: {\r\n                return (\r\n                  <>\r\n                    <Divider className={ classNames(classes.mt20, classes.dividernoPadding) } />\r\n                    <SovosSimpleDynamicTextField\r\n                      key={ index }\r\n                      labelInput=\"Amount\"\r\n                      title=\"Delvery Amount\"\r\n                      fieldName={ `${ fieldPath }.amount` }\r\n                      onRemoveField={ () => fields.remove(index) }\r\n                      type=\"number\"\r\n                    />\r\n                  </>\r\n                )\r\n              }\r\n              case FIELDSNAMES.DELYVERY_INSURANCE_FIELD_NAME: {\r\n                return (\r\n                  <>\r\n                    <Divider className={ classNames(classes.mt20, classes.dividernoPadding) } />\r\n                    <SovosSimpleDynamicTextField\r\n                      key={ index }\r\n                      labelInput=\"Amount\"\r\n                      title=\"Delivery Insurance Amount\"\r\n                      fieldName={ `${ fieldPath }.amount` }\r\n                      onRemoveField={ () => fields.remove(index) }\r\n                    />\r\n                  </>\r\n                )\r\n              }\r\n              case FIELDSNAMES.TRANSACTION_SOURCE_FIELD_NAME: {\r\n                return (\r\n                  <>\r\n                    <Divider className={ classNames(classes.mt20, classes.dividernoPadding) } />\r\n                    <SovosSimpleDynamicTextField\r\n                      key={ index }\r\n                      labelInput=\"Transaction Source\"\r\n                      title=\"Transaction Source\"\r\n                      fieldName={ `${ fieldPath }.transactionSource` }\r\n                      onRemoveField={ () => fields.remove(index) }\r\n                    />\r\n                  </>\r\n                )\r\n              }\r\n              case FIELDSNAMES.DISCOUNTS_FIELDS_NAME: {\r\n                return (\r\n                  <>\r\n                    <Divider className={ classNames(classes.mt20, classes.dividernoPadding) } />\r\n                    <Discounts\r\n                      key={ index }\r\n                      discounts={ fields.get(index).discounts }\r\n                      onRemoveDiscounts={ () => fields.remove(index) }\r\n                      fieldName={ `${ fieldPath }.discounts` }\r\n                    />\r\n                  </>\r\n                )\r\n              }\r\n              default: {\r\n                return <h1>Pow</h1>\r\n              }\r\n            }\r\n\r\n          })\r\n        }\r\n      </div>\r\n      <Divider className={ classNames(classes.mt20, classes.dividernoPadding) } />\r\n      <div style={ { padding: '20px' } }>\r\n        <SovosButtonShowMenus\r\n          label=\"Add Calculation Set-up Items\"\r\n          items={ items }\r\n          onItemSelected={ (item) => {\r\n            if (item.type === FIELDSNAMES.DISCOUNTS_FIELDS_NAME) {\r\n              fields.push({ type: item.type, discounts: [{ type: 1, amount: '' }] });\r\n\r\n            } else {\r\n              fields.push({ type: item.type })\r\n            }\r\n          } }\r\n          itemsSelected={ fields.getAll() }\r\n        />\r\n\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withStyles(styles)(AdditionalFields);"]},"metadata":{},"sourceType":"module"}