{"ast":null,"code":"import _slicedToArray from \"C:\\\\SD10001918\\\\Development\\\\Branches\\\\main-source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\SD10001918\\\\Development\\\\Branches\\\\main-source\\\\src\\\\util\\\\SovosButtonShowMenus.js\";\nimport React from 'react';\nimport { Button } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport AddIcon from '@material-ui/icons/Add';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport green from '@material-ui/core/colors/green';\nexport default function SovosButtonShowMenus(_ref) {\n  var label = _ref.label,\n      items = _ref.items,\n      itemsSelected = _ref.itemsSelected,\n      onItemSelected = _ref.onItemSelected,\n      className = _ref.className;\n\n  if (items.length === itemsSelected.length) {\n    return React.createElement(React.Fragment, null);\n  }\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  function handleClick(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleClose() {\n    setAnchorEl(null);\n  }\n\n  function handleItemSelected(item) {\n    onItemSelected(item);\n    handleClose();\n  }\n\n  return React.createElement(\"div\", {\n    className: className,\n    style: {\n      display: 'flex',\n      justifyContent: 'flex-end',\n      marginTop: '18px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(AddIcon, {\n    style: {\n      marginTop: '8px',\n      color: green[500],\n      marginRight: '10px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Button, {\n    style: {\n      ':hover': {\n        backgroundColor: 'red'\n      },\n      border: 0,\n      borderBottom: '1px solid #e6e6e6',\n      borderRadius: 0,\n      padding: '5px 100px 5px 0',\n      textTransform: 'capitalize',\n      color: 'rgba(0,0,0,0.9)',\n      fontWeight: '400'\n    },\n    variant: \"outlined\",\n    \"aria-owns\": anchorEl ? 'simple-menu' : undefined,\n    \"aria-haspopup\": \"true\",\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, label, React.createElement(ArrowDropDownIcon, {\n    style: {\n      position: 'absolute',\n      top: '5px',\n      right: '0px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }))), React.createElement(Menu, {\n    id: \"simple-menu\",\n    anchorEl: anchorEl,\n    open: Boolean(anchorEl),\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, items.filter(function (item) {\n    return !itemsSelected.find(function (itemSelected) {\n      return itemSelected.type === item.type;\n    });\n  }).map(function (item, key) {\n    return React.createElement(MenuItem, {\n      key: key,\n      onClick: function onClick() {\n        return handleItemSelected(item);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, item.display);\n  })));\n}\nSovosButtonShowMenus.propTypes = {\n  label: PropTypes.any.isRequired,\n  items: PropTypes.any.isRequired,\n  itemsSelected: PropTypes.any.isRequired,\n  onItemSelected: PropTypes.any.isRequired,\n  className: PropTypes.string\n};","map":{"version":3,"sources":["C:\\SD10001918\\Development\\Branches\\main-source\\src\\util\\SovosButtonShowMenus.js"],"names":["React","Button","PropTypes","AddIcon","Menu","MenuItem","ArrowDropDownIcon","green","SovosButtonShowMenus","label","items","itemsSelected","onItemSelected","className","length","useState","anchorEl","setAnchorEl","handleClick","event","currentTarget","handleClose","handleItemSelected","item","display","justifyContent","marginTop","color","marginRight","backgroundColor","border","borderBottom","borderRadius","padding","textTransform","fontWeight","undefined","position","top","right","Boolean","filter","find","itemSelected","type","map","key","propTypes","any","isRequired","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport AddIcon from '@material-ui/icons/Add';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport green from '@material-ui/core/colors/green';\n\nexport default function SovosButtonShowMenus({ label, items, itemsSelected, onItemSelected, className, /*...custom*/ }) {\n  \n  if (items.length === itemsSelected.length) {\n    return (<></>);\n  }\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  function handleClick(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleClose() {\n    setAnchorEl(null);\n  }\n\n  function handleItemSelected(item) {\n    onItemSelected(item);\n    handleClose();\n  }\n\n  return (\n    <div\n      className={ className }\n      style={ { display: 'flex', justifyContent: 'flex-end', marginTop: '18px' } }\n    >\n      <AddIcon style={ { marginTop: '8px', color: green[500], marginRight: '10px' } } />\n\n      <div>\n        <Button\n          style={ {\n            ':hover': { backgroundColor: 'red' }, border: 0, borderBottom: '1px solid #e6e6e6', borderRadius: 0, padding: '5px 100px 5px 0',\n            textTransform: 'capitalize', color: 'rgba(0,0,0,0.9)', fontWeight: '400'\n          } }\n          variant=\"outlined\"\n          aria-owns={ anchorEl ? 'simple-menu' : undefined }\n          aria-haspopup=\"true\"\n          onClick={ handleClick }\n        >\n          {label}\n          <ArrowDropDownIcon style={ { position: 'absolute', top: '5px', right: '0px' } } />\n\n        </Button>\n      </div>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={ anchorEl }\n        open={ Boolean(anchorEl) }\n        onClose={ handleClose }\n      >\n        {items.filter(item => !itemsSelected.find(itemSelected => itemSelected.type === item.type))\n          .map((item, key) => (\n            <MenuItem\n              key={ key }\n              onClick={ () => handleItemSelected(item) }\n            >{item.display}\n            </MenuItem>\n          ))}\n      </Menu>\n    </div>\n  );\n}\n\nSovosButtonShowMenus.propTypes = {\n  label: PropTypes.any.isRequired,\n  items: PropTypes.any.isRequired,\n  itemsSelected: PropTypes.any.isRequired,\n  onItemSelected: PropTypes.any.isRequired,\n  className: PropTypes.string\n};\n"]},"metadata":{},"sourceType":"module"}